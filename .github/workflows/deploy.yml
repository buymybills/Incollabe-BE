name: Deploy Incollab

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Incollab to production
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repo (not used directly, but required by Actions)
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 300s
          script: |
            echo "üöÄ Starting deployment of Incollab to production..."
            cd /home/ubuntu/Incollabe-BE

            # Ensure deploy.sh is executable
            chmod +x deploy.sh

            # Ensure .env file exists and has required values
            if [ ! -f .env ]; then
              echo "Creating .env file..."
              cat > .env << EOF
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            IMAGE_TAG=latest
            EOF
            else
              # Update DOCKERHUB_USERNAME
              if grep -q "DOCKERHUB_USERNAME" .env; then
                sed -i "s/^DOCKERHUB_USERNAME=.*/DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}/" .env
              else
                echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
              fi

              # Update IMAGE_TAG
              if grep -q "IMAGE_TAG" .env; then
                sed -i "s/^IMAGE_TAG=.*/IMAGE_TAG=latest/" .env
              else
                echo "IMAGE_TAG=latest" >> .env
              fi
            fi

            # Run deployment script
            ./deploy.sh deploy

      - name: Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/Incollabe-BE
            echo "üîç Performing health check for Incollab..."

            timeout 30 bash -c 'until curl -f http://localhost/api; do sleep 2; done' || echo "‚ùå Health check failed"
